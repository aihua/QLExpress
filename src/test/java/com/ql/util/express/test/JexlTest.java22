package com.ql.util.express.test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.jexl.Expression;
import org.apache.commons.jexl.ExpressionFactory;
import org.apache.commons.jexl.JexlContext;
import org.apache.commons.jexl.JexlHelper;
import org.springframework.context.ApplicationContextAware;


public class JexlTest implements  Runnable {
	static Expression aExpression = null;
	static {
		try{
		aExpression = ExpressionFactory.createExpression(" a *10 + 1 + 2 * 3 + 5 * 2");
		}catch(Exception e){
			e.printStackTrace();
		}
	}
    protected static Object resolvePlaceholder(String param, Map props) throws Exception {
    	   // Expression aExpression = ExpressionFactory.createExpression(param);
    	
    	    JexlContext jc = JexlHelper.createContext();
    	    jc.getVars().putAll(props);
    	    return aExpression.evaluate(jc);
        }
	public static void main(String[] args) throws Exception {
		for (int i = 0; i < 1; i++) {
			new Thread(new JexlTest()).start();
		}

	}

	public void run() {
		long start = System.currentTimeMillis();
		try {

			for (int j = 0; j < 100000; j++) {
				String[][] expressTest = new String[][] {
						{ " a * 10 + 1 + 2 * 3 + 5 * 2", "117" } };
				HashMap ps = new HashMap();
				ps.put("a",j);
				for (int point = 0; point < expressTest.length; point++) {
					String s = expressTest[point][0];

					Object result = resolvePlaceholder(s,ps);
					if (expressTest[point][1].equalsIgnoreCase("null")
							&& result != null
							|| result != null
							&& (j * 10 + 17+"").equalsIgnoreCase(result
									.toString()) == false) {
						throw new Exception("处理错误,计算结果不对");
					}
					//System.out.println(s + " 执行结果 ： " + result + ":" + result.getClass());
					//System.out.println("错误信息" + errorList);
				}
			//	System.out.println(ps);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		System.out.println(Thread.currentThread() + "耗时："
				+ (System.currentTimeMillis() - start));
	}

}
